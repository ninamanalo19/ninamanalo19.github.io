{"version":3,"sources":["home-top.jpg","Header.js","Footer.js","NoMatch.js","Home.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CustomHeader","props","selectMenu","e","setState","currentMenu","key","history","push","pathname","state","this","location","setTimeout","notification","open","message","description","className","style","fontWeight","onClick","selectedKeys","mode","background","border","Item","React","Component","CustomFooter","display","marginRight","type","href","Header","Layout","Footer","Content","NoMatch","color","fontSize","Home","backgroundImage","homeTop","backgroundColor","BrowserRouter","onUpdate","console","log","Switch","Route","exact","path","component","App","Router","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,sC,mQCiE5BC,E,YA3Db,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAMRC,WAAa,SAAAC,GACX,EAAKC,SAAS,CACZC,YAAaF,EAAEG,MAEH,SAAVH,EAAEG,KACJ,EAAKL,MAAMM,QAAQC,KAAK,CACtBC,SAAU,OAXd,EAAKC,MAAQ,CACXL,YAAa,IAHE,E,iFAmBoB,MAAjCM,KAAKV,MAAMW,SAASH,UACtBE,KAAKP,SAAS,CACZC,YAAa,SAGjBQ,WAAW,WACTC,IAAaC,KAAK,CAChBC,QAAS,UACTC,YACE,qFAEH,O,+BAIH,OACE,yBAAKC,UAAU,iBACb,0BAAMC,MAAO,CAAEC,WAAY,QAA3B,eAGA,kBAAC,IAAD,CAAMC,QAASV,KAAKT,WAAYoB,aAAc,CAACX,KAAKD,MAAML,aAAckB,KAAK,aAAaJ,MAAO,CAACK,WAAW,cAAeC,OAAQ,SAClI,kBAAC,IAAKC,KAAN,CAAWpB,IAAI,QACb,uCAEF,kBAAC,IAAKoB,KAAN,CAAWpB,IAAI,YAAf,YAGA,kBAAC,IAAKoB,KAAN,CAAWpB,IAAI,WAAf,WAGA,kBAAC,IAAKoB,KAAN,CAAWpB,IAAI,WAAf,iB,GAnDiBqB,IAAMC,W,QCalBC,E,iLAZX,OACE,yBAAKX,UAAU,kBAAf,aAEE,yBAAKC,MAAO,CAAEW,QAAS,WACrB,kBAAC,IAAD,CAAMX,MAAO,CAAEY,YAAa,OAASC,KAAK,SAC1C,uBAAGC,KAAK,kCAAR,iC,GAPiBN,IAAMC,W,SCEzBM,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,OAAQC,EAAYF,IAAZE,QAoBTC,E,iLAhBX,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAiB3B,KAAKV,QAEzB,kBAACoC,EAAD,CAASnB,UAAU,kBACjB,0BAAMC,MAAO,CAAEC,WAAY,MAAOmB,MAAO,QAASC,SAAU,SAA5D,6BAEF,kBAAC,EAAD,KACE,kBAAC,EAAiB7B,KAAKV,a,GAXX0B,IAAMC,W,kBCFpBM,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,OAAQC,EAAYF,IAAZE,QAuBTI,E,iLAjBX,OACE,kBAAC,IAAD,CAAQtB,MAAO,CAAEuB,gBAAiB,OAASC,IAAU,IAAKC,gBAAiB,UACzE,kBAAC,EAAD,KACE,kBAAC,EAAiBjC,KAAKV,QAEzB,kBAAC,EAAD,CAASiB,UAAU,kBACjB,0BAAMC,MAAO,CAAEC,WAAY,MAAOmB,MAAO,QAASC,SAAU,SAA5D,2BACA,0BAAMrB,MAAO,CAAEC,WAAY,MAAOmB,MAAO,QAASC,SAAU,SAA5D,yBAEF,kBAAC,EAAD,KACE,kBAAC,EAAiB7B,KAAKV,a,GAbd0B,IAAMC,WCDV,oBACf,kBAACiB,EAAA,EAAD,CAAeC,SAAU,WAAOC,QAAQC,IAAI,qBAC1C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWZ,IACjC,kBAACS,EAAA,EAAD,CAAOG,UAAWf,OCDPgB,MANf,WACE,OACE,kBAACC,EAAD,OCMgBC,QACW,cAA7BC,OAAO7C,SAAS8C,UAEe,UAA7BD,OAAO7C,SAAS8C,UAEhBD,OAAO7C,SAAS8C,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.7b4b0631.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home-top.28752a37.jpg\";","import React from 'react';\n\nimport { Menu, notification } from 'antd';\n\nclass CustomHeader extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      currentMenu: \"\"\n    };\n  }\n\n  selectMenu = e => {\n    this.setState({\n      currentMenu: e.key,\n    });\n    if (e.key === \"home\") {\n      this.props.history.push({\n        pathname: \"/\",\n      });\n    }\n  };\n\n  componentDidMount() {\n    if (this.props.location.pathname === \"/\") {\n      this.setState({\n        currentMenu: \"home\"\n      })\n    }\n    setTimeout(function () {\n      notification.open({\n        message: 'Warning',\n        description:\n          'This site is under construction and should not be considered as its final form.'\n      });\n    }, 1000);\n  }\n\n  render() {\n    return (\n      <div className=\"header-parent\">\n        <span style={{ fontWeight: '700' }}>\n        Nina Manalo\n        </span>\n        <Menu onClick={this.selectMenu} selectedKeys={[this.state.currentMenu]} mode=\"horizontal\" style={{background:\"transparent\", border: \"none\"}}>\n          <Menu.Item key=\"home\">\n            <span>Home</span>\n          </Menu.Item>\n          <Menu.Item key=\"about-me\">\n            About Me\n          </Menu.Item>\n          <Menu.Item key=\"service\">\n            Service\n          </Menu.Item>\n          <Menu.Item key=\"contact\">\n            Contact\n          </Menu.Item>\n        </Menu>\n      </div>\n\n    )\n  }\n}\n\nexport default CustomHeader;\n","import React from 'react';\nimport { Icon } from 'antd';\n\nclass CustomFooter extends React.Component {\n  render() {\n    return (\n      <div className=\"content-column\">\n        Contact Me\n        <div style={{ display: 'inline'}}>\n          <Icon style={{ marginRight: '8px' }} type=\"mail\" />\n          <a href=\"mailto:nina.manalo19@gmail.com\">nina.manalo19@gmail.com</a>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CustomFooter;\n","import React from 'react';\n\nimport CustomHeader from './Header.js'\nimport CustomFooter from './Footer.js'\nimport { Layout } from 'antd';\nconst { Header, Footer, Content } = Layout;\n\nclass NoMatch extends React.Component {\n  render() {\n    return (\n      <Layout>\n        <Header>\n          <CustomHeader {...this.props}/>\n        </Header>\n        <Content className=\"content-center\">\n          <span style={{ fontWeight: '900', color: 'white', fontSize: '40px'}}>Oops! Page not found. :(</span>\n        </Content>\n        <Footer>\n          <CustomFooter {...this.props}/>\n        </Footer>\n      </Layout>\n    )\n  }\n}\n\nexport default NoMatch;\n","import React from 'react';\nimport homeTop from './home-top.jpg'\nimport CustomHeader from './Header.js'\nimport CustomFooter from './Footer.js'\nimport { Layout } from 'antd';\nconst { Header, Footer, Content } = Layout;\n\n\nclass Home extends React.Component {\n\n  render() {\n    return (\n      <Layout style={{ backgroundImage: \"url(\" + homeTop + \")\", backgroundColor: \"white\" }}>\n        <Header>\n          <CustomHeader {...this.props}/>\n        </Header>\n        <Content className=\"content-center\">\n          <span style={{ fontWeight: '700', color: 'white', fontSize: '20px'}}>Hi! I am Ni√±a Manalo</span>\n          <span style={{ fontWeight: '900', color: 'white', fontSize: '40px'}}>Mobile App Developer</span>\n        </Content>\n        <Footer>\n          <CustomFooter {...this.props}/>\n        </Footer>\n      </Layout>\n    )\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nimport NoMatch from './NoMatch.js';\nimport Home from './Home.js';\n\n\nexport default () => (\n<BrowserRouter onUpdate={() => {console.log('updating router');}}>\n  <Switch>\n    <Route exact path=\"/\" component={Home}/>\n    <Route component={NoMatch} />\n  </Switch>\n</BrowserRouter>\n);\n","import React from 'react';\nimport './App.css';\nimport Router from './Router.js';\n\nfunction App() {\n  return (\n    <Router/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}